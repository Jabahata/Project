---
- name: making cache
  yum:
    update_cache: yes

- name: updating packages
  yum:
    name: '*'
    state: latest

- name: installing necessary packages
  yum:
    name: "{{ item }}"
    state: present
  loop:
    - openldap
    - 'openldap-clients'
    - 'openldap-servers'
    - openssl
    - httpd

- name: starting and enabling slapd
  service:
    name: slapd
    state: started
    enabled: yes

- name: checking if the LDAP password has already been set
  stat:
    path: /etc/ldap_password_set.flag
  register: flag

- name: generate password if not generated yet
  shell: "slappasswd -s password"
  register: slappasswd_output
  changed_when: False
  when: not flag.stat.exists

- name: creating hdb.ldif file
  copy:
    src: hdb.ldif
    dest: /home/ansible/hdb.ldif
    owner: root
    group: root
    mode: '0644'

- name: adding hdb.ldif for LDAP recognition
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f hdb.ldif

- name: creating monitor.ldif
  copy:
    src: monitor.ldif
    dest: /home/ansible/monitor.ldif
    owner: root
    group: root
    mode: '0644'

- name: adding monitor.ldif for LDAP recognition
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f monitor.ldif 

- name: ensuring directory for certificates exists
  file:
    path: "{{ certs_dir }}"
    state: directory
    mode: '0755'

- name: generating an RSA private key # CA.key
  openssl_privatekey:
    path: "{{ certs_dir }}/CA.key"
    size: 2048 # bits
  when: not ansible.builtin.stat:
    path: "{{ cert_dir }}/CA.key"
  register: ca_key

- name: generating a self signed certificate for CA.key
  openssl_certificate:
    path: "{{ certs_dir }}/CA.crt"
    privatekey_path: "{{ certs_dir }}/CA.key"
    subject:
      commonName: "Ziyotek Root CA"
    selfsigned_not_after: "+1024d"
    selfsigned_not_before: "0d"
    provider: selfsigned
    csr_country_name: US
    csr_state_or_province_name: Virginia
    csr_locality_name: Vienna
    csr_organization_name: Ziyotek
    csr_organizational_unit_name: IT
    csr_common_name: "Ziyotek Root CA"
    csr_email_address: "admin@ziyotek.com"
  when: ca_key is changed

- name: generating RSA private key for LDAP server
  openssl_privatekey:
    path: "{{ certs_dir }}/ldap.key"
    size: 2048
  when: not ansible.builtin.stat:
    path: "{{ cert_dir }}/ldap.key"
  register: ldap_key

- name: generating CSR for LDAP server
  openssl_csr:
    path: "{{ cert_dir }}/ldap.csr"
    privatekey_path: "{{ cert_dir }}/ldap.key"
    country_name: US
    state_or_province_name: Virginia
    locality_name: Vienna
    organization_name: Ziyotek
    organizational_unit_name: IT
    common_name: "prdx-ldap201.ziyotek2.local"
    email_address: "admin@ziyotek.com"
  when: ldap_key is changed

- name: signing the LDAP server CSR with the CA
  openssl_certificate:
    path: "{{ cert_dir }}/ldap.crt"
    csr_path: "{{ cert_dir }}/ldap.csr"
    ownca_path: "{{ cert_dir }}/CA.crt"
    ownca_privatekey_path: "{{ cert_dir }}/CA.key"
    provider: ownca
    ownca_not_after: "+1460d"
    ownca_not_before: "0d"
  when: ldap_key is changed and not ansible.builtin.stat:
    path: "{{ cert_dir }}/ldap.crt"

- name: creating key.ldif and setting up keys
  copy:
    src: key.ldif
    dest: /home/ansible/key.ldif
    owner: root
    group: root
    mode: '0644'

- name: adding key.ldif for LDAP recognition
  shell: ldapmodify -Y EXTERNAL -H ldapi:/// -f key.ldif 

- name: starting and enabling httpd service
  service:
    name: httpd
    state: started
    enabled: yes
    
- name: copying CA.crt to /var/www/html
  shell: cp /etc/openldap/certs/CA.crt /var/www/html/ 

- name: restarting slapd service
  service:
    name: slapd
    state: restarted

- name: creating and configuring base.ldif
  copy:
    src: base.ldif
    dest: /home/ansible/base.ldif
    owner: root
    group: root
    mode: '0644'

- name: adding base.ldif for LDAP recognition
  shell: ldapadd -x -W -D "cn=admin,dc=ziyotek2,dc=local" -f base.ldif

- name: adding cosine.ldif schema for LDAP
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif

- name: adding nis.ldif schema for LDAP
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif

- name: adding inetorgperson.ldif schema for LDAP
  shell: ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif

- name: creating and configuring user.ldif for LDAP
  copy:
    src: user.ldif
    dest: /home/ansible/user.ldif
    owner: root
    group: root
    mode: '0644'

- name: adding user.ldif for LDAP recognition
  shell: ldapadd -x -W -D "cn=admin,dc=ziyotek2,dc=local" -f user.ldif 

- name: setting password for user adam
  shell: ldappasswd -s password -W -D "cn=admin,dc=ziyotek2,dc=local" -x "uid=adam,ou=users,dc=ziyotek2,dc=local"

- name: creating and configuring group.ldif
  copy:
    src: group.ldif
    dest: /home/ansible/group.ldif
    owner: root
    group: root
    mode: '0644'

- name: adding group.ldif for LDAP recognition
  shell: ldapadd -x -W -D "cn=admin,dc=ziyotek2,dc=local" -f group.ldif 

- name: adding user adam to group 'bravo'
  copy:
    src: modify_user.ldif
    dest: /home/ansible/modify_user.ldif
    owner: root
    group: root
    mode: '0644'

- name: adding modify_user.ldif for LDAP recognition
  shell: ldapmodify -x -W -D "cn=admin,dc=ziyotek2,dc=local" -f modify_user.ldif

- name: restart slapd service
  service:
    name: slapd
    state: restarted

- name: searching for user adam within LDAP
  shell: ldapsearch -x -LLL -b "dc=ziyotek2,dc=local" "(uid=adam)"
  register: result

- name: displaying output from search
  debug:
    msg: "{{ result.stdout }}"